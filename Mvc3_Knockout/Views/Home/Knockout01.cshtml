@{
    ViewBag.Title = "Knockout01";
}
<h2>Knockout01</h2>
<div>
Name: <input type="text" data-bind="value:name, valueUpdate:'afterkeydown'" /><br />
<input type="checkbox" data-bind="checked: nameVisible" />
Hello, <span data-bind="text:name, visible: nameVisible"></span><br />
<span data-bind="text: displayName"></span><br />

<button data-bind="click:changeName">Click me!</button>

Now into some observable collections

<button data-bind="click: addItem">Add</button>
<button data-bind="click: removeItem">Remove</button>
<ul data-bind="template:{name: 'listTempl', foreach: list}">
</ul>

<script id="listTempl" type="text/html">
    <li data-bind="text:name"></li>
</script>

</div>
<script src="../../Scripts/jquery-1.5.1-vsdoc.js" type="text/javascript"></script>
<script src="../../Scripts/knockout-1.3.0beta.debug.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var data = [{ name: "rajiv" }, { name: "kumar" }, { name: "gogoi"}];

        var viewModel = {
            name: ko.observable("Rajiv"),

            changeName: function () {
                this.name("Gogoi")
            },

            nameVisible: ko.observable(true),

            //observable collections
            list: ko.observableArray(data),

            addItem: function()
            {
                this.list.push({name:"new name"})
            },

            removeItem: function()
            {
                this.list.pop();
            }
        }

        //Dependant observable
        viewModel.displayName = ko.computed(function () {
            return this.name() + " is " + (!this.nameVisible() ? " not " : "") + " visible."
        }, viewModel);

        ko.applyBindings(viewModel);
    });
</script>